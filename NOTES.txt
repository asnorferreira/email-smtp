# Envio de emails

## SMTP - Simple Mails Transfer Protocol

### Host - SMTP - Destination

---

## Serviços de E-mail (Servidores SMTP)
- Sendgrid 
- Mailtrap
- Mailgum

---

### Host: endereço do servidor
### Port: porta do servidor
### username: usuario do servidor
### password: senha de autenticação


## O que é?
### Protocolo padrão utilizado para envio de mensagens de correio eletrônico;

---

## Envio de E-mail
### Nome: Maria
### E-mail: maria@gmail.com

Cliente -> Servidor SMTP gmail -> Servidor SMTP outlook -> Cliente/2

---

## Nodemailer

### Biblioteca para Node.js que possibilita o envio de e-mails em aplicações através de um servidor SMTP

ex:

export const transport = nodemailer.createTransport({
    host: "",
    port: ,
    secure: false/true,
    auth: {
        user: '',
        pass: '',
    },
});

transport.sendEmail({
    from: 'student cubos academy <nao-resopnder@classcubosacademy.com.br>',
    to: 'student.ferreira@cubos.academy',
    subject: "Notes about login",
    text: "Login was successful",
});






/*
export const user = {
  name: "Asnor Cubos",
  email: "asnorferreira@cubos.academy",
  password: "123Asc",
};
*/
/*
export const login = async (req, res) => {
  const { email, password } = req.body;

  try {
    if (user.email !== email || user.password !== password) {
      return res.status(401).json({
        error: "Email or password do not match",
      });
    }

    const html = await compilatorHtml("./src/templates/login.html", {
      nameuser: user.name,
    });

    transport.sendMail({
      from: `${process.env.EMAIL_NAME} <${process.env.EMAIL_FROM}>`,
      to: `${user.nome} <${user.email}>`,
      subject: "Try to login",
      html,
    });
    return res.status(200).json({
      message: "Login success",
    });
  } catch (error) {
    return res.status(500).json({
      error: "Internal server error",
    });
  }
}; 